{"version":3,"file":"AsTokenFactory.js","names":["AsTokenFactory","keywordCase","tokens","detectedCase","autoDetectCase","asTokens","filter","isToken","AS","upperAsTokens","text","length","type","TokenType","RESERVED_KEYWORD","value","asTokenValue"],"sources":["../../src/formatter/AsTokenFactory.ts"],"sourcesContent":["import type { KeywordCase } from 'src/types';\nimport { isToken, type Token, TokenType } from 'src/lexer/token';\n\nexport default class AsTokenFactory {\n  private detectedCase: KeywordCase;\n\n  constructor(private keywordCase: KeywordCase, tokens: Token[] = []) {\n    this.detectedCase = this.autoDetectCase(tokens);\n  }\n\n  private autoDetectCase(tokens: Token[]) {\n    const asTokens = tokens.filter(isToken.AS);\n    const upperAsTokens = asTokens.filter(({ text }) => text === 'AS');\n    return upperAsTokens.length > asTokens.length / 2 ? 'upper' : 'lower';\n  }\n\n  /** Returns AS token with either upper- or lowercase text */\n  public token(): Token {\n    return {\n      type: TokenType.RESERVED_KEYWORD,\n      value: this.asTokenValue(),\n      text: this.asTokenValue(),\n    };\n  }\n\n  private asTokenValue(): 'AS' | 'as' {\n    const keywordCase = this.keywordCase === 'preserve' ? this.detectedCase : this.keywordCase;\n    return keywordCase === 'upper' ? 'AS' : 'as';\n  }\n}\n"],"mappings":";;;;;;;AACA;;;;;;;;;;IAEqBA,c;EAGnB,wBAAoBC,WAApB,EAAoE;IAAA,IAAtBC,MAAsB,uEAAJ,EAAI;;IAAA;;IAAA,KAAhDD,WAAgD,GAAhDA,WAAgD;;IAAA;;IAClE,KAAKE,YAAL,GAAoB,KAAKC,cAAL,CAAoBF,MAApB,CAApB;EACD;;;;WAED,wBAAuBA,MAAvB,EAAwC;MACtC,IAAMG,QAAQ,GAAGH,MAAM,CAACI,MAAP,CAAcC,cAAA,CAAQC,EAAtB,CAAjB;MACA,IAAMC,aAAa,GAAGJ,QAAQ,CAACC,MAAT,CAAgB;QAAA,IAAGI,IAAH,QAAGA,IAAH;QAAA,OAAcA,IAAI,KAAK,IAAvB;MAAA,CAAhB,CAAtB;MACA,OAAOD,aAAa,CAACE,MAAd,GAAuBN,QAAQ,CAACM,MAAT,GAAkB,CAAzC,GAA6C,OAA7C,GAAuD,OAA9D;IACD;IAED;;;;WACA,iBAAsB;MACpB,OAAO;QACLC,IAAI,EAAEC,gBAAA,CAAUC,gBADX;QAELC,KAAK,EAAE,KAAKC,YAAL,EAFF;QAGLN,IAAI,EAAE,KAAKM,YAAL;MAHD,CAAP;IAKD;;;WAED,wBAAoC;MAClC,IAAMf,WAAW,GAAG,KAAKA,WAAL,KAAqB,UAArB,GAAkC,KAAKE,YAAvC,GAAsD,KAAKF,WAA/E;MACA,OAAOA,WAAW,KAAK,OAAhB,GAA0B,IAA1B,GAAiC,IAAxC;IACD"}